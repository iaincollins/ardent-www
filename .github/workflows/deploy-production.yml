name: Deploy Ardent Website to Production

# This deployment script assumes the following are configured in GitHub actions:
#
#  SSH_PRIVATE_KEY [secret]
#  DEPLOY_HOST [variable]
#  DEPLOY_USER [variable]
#  DEPLOY_DIR [variable]
#  AWS_SECRET_ACCESS_KEY [secret]
#  AWS_ACCESS_KEY_ID [variable]
#  AWS_CLOUDFRONT_REGION [variable]
#  AWS_CLOUDFRONT_DISTRIBUTION_ID [variable]
#
# It also assumes the service has been previously run using pm2:
#
#  pm2 start npm --name "{repository name}" -- run start
#  pm2 save

on:
  push:
    branches: [ "main" ]

env:
  SERVICE_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Generate env.GITH_SHA_SHORT
      run: echo "GIT_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "./"
        REMOTE_HOST: ${{ vars.DEPLOY_HOST }}
        REMOTE_USER: ${{ vars.DEPLOY_USER }}
        TARGET: "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}-${{ env.GIT_SHA_SHORT}}"
        EXCLUDE: ".git*, *.md, .next, LICENSE, node_modules/"
        SCRIPT_BEFORE: |
          rm -rf "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}.tmp"
          cp -R "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}" "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}-${{ env.GIT_SHA_SHORT}}" || :
        SCRIPT_AFTER: |
          cd "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}-${{ env.GIT_SHA_SHORT}}"
          npm install --omit=dev 
          npm run build
          cd ..
          date
          pm2 stop "${{ env.SERVICE_NAME }}"
          pm2 delete "${{ env.SERVICE_NAME }}"
          mv "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}" "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}.tmp" || :
          mv "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}-${{ env.GIT_SHA_SHORT}}" "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}"
          cd "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}"
          pm2 start npm --name "${{ env.SERVICE_NAME }}" -- run start
          date
          pm2 save
          rm -rf "${{ vars.DEPLOY_DIR }}/${{ env.SERVICE_NAME }}.tmp"
          echo $RSYNC_STDOUT
    - name: Invalidate CloudFront cache
      uses: chetan/invalidate-cloudfront-action@v2
      env:
        DISTRIBUTION: ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
        PATHS: "/*"
        AWS_REGION: ${{ vars.AWS_CLOUDFRONT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}